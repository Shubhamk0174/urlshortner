{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 32, "column": 0}, "map": {"version":3,"sources":["file:///D:/Codes/WebDev/Code%20With%20Harry/node_js/136%20url%20shortner/my-app/lib/mongodb.js"],"sourcesContent":["import { MongoClient } from \"mongodb\";\r\n\r\nconst uri = process.env.MONGODB_URI;\r\nconst options = {};\r\n\r\nlet client;\r\nlet clientPromise;\r\n\r\nif (!process.env.MONGODB_URI) {\r\n    throw new Error('Add Mongo URI to .env.local');\r\n}\r\n\r\nif (process.env.NODE_ENV === \"development\") {\r\n    // In development, use a global variable so the value is preserved across module reloads\r\n    if (!global._mongoClientPromise) {\r\n        client = new MongoClient(uri, options);\r\n        global._mongoClientPromise = client.connect();\r\n    }\r\n    clientPromise = global._mongoClientPromise;\r\n} else {\r\n    // In production, it's best not to use a global variable\r\n    client = new MongoClient(uri, options);\r\n    clientPromise = client.connect();\r\n}\r\n\r\nexport default clientPromise;"],"names":[],"mappings":";;;AAAA;;AAEA,MAAM,MAAM,QAAQ,GAAG,CAAC,WAAW;AACnC,MAAM,UAAU,CAAC;AAEjB,IAAI;AACJ,IAAI;AAEJ,IAAI,CAAC,QAAQ,GAAG,CAAC,WAAW,EAAE;IAC1B,MAAM,IAAI,MAAM;AACpB;AAEA,wCAA4C;IACxC,wFAAwF;IACxF,IAAI,CAAC,OAAO,mBAAmB,EAAE;QAC7B,SAAS,IAAI,uGAAA,CAAA,cAAW,CAAC,KAAK;QAC9B,OAAO,mBAAmB,GAAG,OAAO,OAAO;IAC/C;IACA,gBAAgB,OAAO,mBAAmB;AAC9C,OAAO;;AAIP;uCAEe","debugId":null}},
    {"offset": {"line": 61, "column": 0}, "map": {"version":3,"sources":["file:///D:/Codes/WebDev/Code%20With%20Harry/node_js/136%20url%20shortner/my-app/app/%5Bshorturl%5D/page.js"],"sourcesContent":["import { redirect } from \"next/navigation\";\r\nimport clientPromise from \"@/lib/mongodb\";\r\n\r\nexport default async function Page({ params }) {\r\n    console.log(params);\r\n    const shorturl = await params.shorturl;\r\n    console.log(\"short url\", shorturl);\r\n\r\n    const client = await clientPromise;\r\n    const db = client.db(\"urlShortner\");\r\n    const collection = db.collection(\"url\");\r\n\r\n    const doc = await collection.findOne({ shorturl: shorturl });\r\n    console.log(\"doc\", doc);\r\n    if (doc && doc.url) {\r\n        let target = doc.url;\r\n        if (!/^https?:\\/\\//i.test(target)) {\r\n            target = \"https://\" + target;\r\n        }\r\n        redirect(target);\r\n    } else {\r\n        redirect(process.env.NEXT_PUBLIC_HOST);\r\n    }\r\n    return <div></div>;\r\n}\r\n"],"names":[],"mappings":";;;;AAAA;AAAA;AACA;;;;AAEe,eAAe,KAAK,EAAE,MAAM,EAAE;IACzC,QAAQ,GAAG,CAAC;IACZ,MAAM,WAAW,MAAM,OAAO,QAAQ;IACtC,QAAQ,GAAG,CAAC,aAAa;IAEzB,MAAM,SAAS,MAAM,8GAAA,CAAA,UAAa;IAClC,MAAM,KAAK,OAAO,EAAE,CAAC;IACrB,MAAM,aAAa,GAAG,UAAU,CAAC;IAEjC,MAAM,MAAM,MAAM,WAAW,OAAO,CAAC;QAAE,UAAU;IAAS;IAC1D,QAAQ,GAAG,CAAC,OAAO;IACnB,IAAI,OAAO,IAAI,GAAG,EAAE;QAChB,IAAI,SAAS,IAAI,GAAG;QACpB,IAAI,CAAC,gBAAgB,IAAI,CAAC,SAAS;YAC/B,SAAS,aAAa;QAC1B;QACA,CAAA,GAAA,qLAAA,CAAA,WAAQ,AAAD,EAAE;IACb,OAAO;QACH,CAAA,GAAA,qLAAA,CAAA,WAAQ,AAAD;IACX;IACA,qBAAO,8OAAC;;;;;AACZ","debugId":null}}]
}