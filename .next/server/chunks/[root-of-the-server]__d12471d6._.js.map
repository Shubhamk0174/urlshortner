{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 60, "column": 0}, "map": {"version":3,"sources":["file:///D:/Codes/WebDev/Code%20With%20Harry/node_js/136%20url%20shortner/my-app/lib/mongodb.js"],"sourcesContent":["import { MongoClient } from \"mongodb\";\r\n\r\nconst uri = process.env.MONGODB_URI;\r\nconst options = {};\r\n\r\nlet client;\r\nlet clientPromise;\r\n\r\nif (!process.env.MONGODB_URI) {\r\n    throw new Error('Add Mongo URI to .env.local');\r\n}\r\n\r\nif (process.env.NODE_ENV === \"development\") {\r\n    // In development, use a global variable so the value is preserved across module reloads\r\n    if (!global._mongoClientPromise) {\r\n        client = new MongoClient(uri, options);\r\n        global._mongoClientPromise = client.connect();\r\n    }\r\n    clientPromise = global._mongoClientPromise;\r\n} else {\r\n    // In production, it's best not to use a global variable\r\n    client = new MongoClient(uri, options);\r\n    clientPromise = client.connect();\r\n}\r\n\r\nexport default clientPromise;"],"names":[],"mappings":";;;AAAA;;AAEA,MAAM,MAAM,QAAQ,GAAG,CAAC,WAAW;AACnC,MAAM,UAAU,CAAC;AAEjB,IAAI;AACJ,IAAI;AAEJ,IAAI,CAAC,QAAQ,GAAG,CAAC,WAAW,EAAE;IAC1B,MAAM,IAAI,MAAM;AACpB;AAEA,wCAA4C;IACxC,wFAAwF;IACxF,IAAI,CAAC,OAAO,mBAAmB,EAAE;QAC7B,SAAS,IAAI,uGAAA,CAAA,cAAW,CAAC,KAAK;QAC9B,OAAO,mBAAmB,GAAG,OAAO,OAAO;IAC/C;IACA,gBAAgB,OAAO,mBAAmB;AAC9C,OAAO;;AAIP;uCAEe","debugId":null}},
    {"offset": {"line": 89, "column": 0}, "map": {"version":3,"sources":["file:///D:/Codes/WebDev/Code%20With%20Harry/node_js/136%20url%20shortner/my-app/app/api/generate/route.js"],"sourcesContent":["import clientPromise from '@/lib/mongodb'\r\n\r\n\r\nexport async function POST(request) {\r\n\r\n    const body = await request.json()\r\n    console.log(\"body\",body);\r\n    const client = await clientPromise;\r\n    const db = client.db(\"urlShortner\")\r\n    const collection = db.collection(\"url\")\r\n\r\n\r\n    // Check if the short url exists\r\n    const doc = await collection.findOne({shorturl: body.shorturl})\r\n    console.log(doc);\r\n    console.log(\"this is executed\");\r\n    if(doc){\r\n        return Response.json({success: false, error: true, message: 'URL Already Exists'})\r\n    }\r\n\r\n\r\n    const result = await collection.insertOne({\r\n        url: body.url,\r\n        shorturl: body.shorturl\r\n    })\r\n\r\n    return Response.json({success: true, error: false, message: 'URL Generated Successfully'})\r\n}"],"names":[],"mappings":";;;AAAA;;AAGO,eAAe,KAAK,OAAO;IAE9B,MAAM,OAAO,MAAM,QAAQ,IAAI;IAC/B,QAAQ,GAAG,CAAC,QAAO;IACnB,MAAM,SAAS,MAAM,gHAAA,CAAA,UAAa;IAClC,MAAM,KAAK,OAAO,EAAE,CAAC;IACrB,MAAM,aAAa,GAAG,UAAU,CAAC;IAGjC,gCAAgC;IAChC,MAAM,MAAM,MAAM,WAAW,OAAO,CAAC;QAAC,UAAU,KAAK,QAAQ;IAAA;IAC7D,QAAQ,GAAG,CAAC;IACZ,QAAQ,GAAG,CAAC;IACZ,IAAG,KAAI;QACH,OAAO,SAAS,IAAI,CAAC;YAAC,SAAS;YAAO,OAAO;YAAM,SAAS;QAAoB;IACpF;IAGA,MAAM,SAAS,MAAM,WAAW,SAAS,CAAC;QACtC,KAAK,KAAK,GAAG;QACb,UAAU,KAAK,QAAQ;IAC3B;IAEA,OAAO,SAAS,IAAI,CAAC;QAAC,SAAS;QAAM,OAAO;QAAO,SAAS;IAA4B;AAC5F","debugId":null}}]
}